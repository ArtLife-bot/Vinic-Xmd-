// settings.js
// credit by Kevin tech 

const config = require('./setting/config');


const settings = {
  SESSION_ID: config.SESSION_ID || "starcore~eyJub2lzZUtleSI6eyJwcml2YXRlIjp7InR5cGUiOiJCdWZmZXIiLCJkYXRhIjoiQUdnTW9PdEo1UENBMFcwSjV4a2xMNXBBQlBiVUoyaHpIRU41WHRSTm1tRT0ifSwicHVibGljIjp7InR5cGUiOiJCdWZmZXIiLCJkYXRhIjoiK0lDZzFYT1VVQ0FmQXZ4VEYrWlF5M1p5N3VnU3RLTUdVTUtIZmtDa3hsbz0ifX0sInBhaXJpbmdFcGhlbWVyYWxLZXlQYWlyIjp7InByaXZhdGUiOnsidHlwZSI6IkJ1ZmZlciIsImRhdGEiOiJpS0RIOUhlYS8rNzVaWWJ0KzROODNITm5qSmRtWHFOQ0xSNTRVODlpdjNVPSJ9LCJwdWJsaWMiOnsidHlwZSI6IkJ1ZmZlciIsImRhdGEiOiJZYnpycU5qLzlUT2ZteDREdmJLWWtqb0xjZjVDdmhDODJpUVkzRmVTaFNnPSJ9fSwic2lnbmVkSWRlbnRpdHlLZXkiOnsicHJpdmF0ZSI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6IjhPU1I5bzlCT3N2M0tDU1ArL3lVZ0g4aDd5TndyNkJORjFMREpmZ1NSa2M9In0sInB1YmxpYyI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6Ik9RN0R1UUF6djJObDhHNll1aWhQK3dlTmhKZG5tbW5NZkVUajBJcVhOekE9In19LCJzaWduZWRQcmVLZXkiOnsia2V5UGFpciI6eyJwcml2YXRlIjp7InR5cGUiOiJCdWZmZXIiLCJkYXRhIjoia0pwTjloUUREQ1pxcXJqd1hzbmNUeEdtbXp1UGYxdzFzbjVBY2w1RC9tVT0ifSwicHVibGljIjp7InR5cGUiOiJCdWZmZXIiLCJkYXRhIjoiNmw3cUU2bkppS2dLMzYyRFZTL000OE81NTJoUWk4aWI3ZnRMendxR0VoND0ifX0sInNpZ25hdHVyZSI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6IllQWVZUOGdXRUpVd0NXMFhjODJmc0Z0eWhWWXRRSlpnWkFuaGJiQUlCL3pJYS9UVm84WHFjN2E0ZExrZ2swVUJVVWJqSHlhUzBva2txUTR6d3diY2dRPT0ifSwia2V5SWQiOjF9LCJyZWdpc3RyYXRpb25JZCI6MTI5LCJhZHZTZWNyZXRLZXkiOiJsMDR4OHdwT3FYbzZ3cXRNb2pNUmc1YlVIdU5PQUtjbDRCN0NpT0FQRm1NPSIsInByb2Nlc3NlZEhpc3RvcnlNZXNzYWdlcyI6W10sIm5leHRQcmVLZXlJZCI6MzEsImZpcnN0VW51cGxvYWRlZFByZUtleUlkIjozMSwiYWNjb3VudFN5bmNDb3VudGVyIjowLCJhY2NvdW50U2V0dGluZ3MiOnsidW5hcmNoaXZlQ2hhdHMiOmZhbHNlfSwicmVnaXN0ZXJlZCI6dHJ1ZSwicGFpcmluZ0NvZGUiOiI0RFBNNlQ5WiIsIm1lIjp7ImlkIjoiMjc2ODc2NTExMzY6OUBzLndoYXRzYXBwLm5ldCIsImxpZCI6IjI2OTYzODMxNTI4MjY1Njo5QGxpZCJ9LCJhY2NvdW50Ijp7ImRldGFpbHMiOiJDTnJ4bGJNQkVLQ3o3OFlHR0FFZ0FDZ0EiLCJhY2NvdW50U2lnbmF0dXJlS2V5IjoiSDNRYXpIUmwwRDdiL2xLUFV2OG5KampacGVVYU9SN3Ira1d2Z0wvSWRIRT0iLCJhY2NvdW50U2lnbmF0dXJlIjoiOGJza2JxdGFXKzhSRzJZN2x4cmhtVXV5STRTMjZEY3FiV3pEdlVrZDlMTHlMa0I5T0ZadzZQZUg2QTlXenMvTXRoTW1SbHRoK0dyQkJDWFZSQTBIREE9PSIsImRldmljZVNpZ25hdHVyZSI6ImVNSElneXQyT3d3TloxeDFwZndoWFBqV20vMnRKMEQ0L1JXK25vWEhteUNjZFZ3aWkxTHFZUytaTTVqR1pVV2JtVkd0TmJuVWU3aHRNYXNTRVU4WmdRPT0ifSwic2lnbmFsSWRlbnRpdGllcyI6W3siaWRlbnRpZmllciI6eyJuYW1lIjoiMjc2ODc2NTExMzY6OUBzLndoYXRzYXBwLm5ldCIsImRldmljZUlkIjowfSwiaWRlbnRpZmllcktleSI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6IkJSOTBHc3gwWmRBKzIvNVNqMUwvSnlZNDJhWGxHamtlNi9wRnI0Qy95SFJ4In19XSwicGxhdGZvcm0iOiJhbmRyb2lkIiwicm91dGluZ0luZm8iOnsidHlwZSI6IkJ1ZmZlciIsImRhdGEiOiJDQWdJQWc9PSJ9LCJsYXN0QWNjb3VudFN5bmNUaW1lc3RhbXAiOjE3NTkyMzg1NzMsImxhc3RQcm9wSGFzaCI6IjFLNGhINCJ9RT0ifSwicHVibGljIjp7InR5cGUiOiJCdWZmZXIiLCJkYXRhIjoiK0lDZzFYT1VVQ0FmQXZ4VEYrWlF5M1p5N3VnU3RLTUdVTUtIZmtDa3hsbz0ifX0sInBhaXJpbmdFcGhlbWVyYWxLZXlQYWlyIjp7InByaXZhdGUiOnsidHlwZSI6IkJ1ZmZlciIsImRhdGEiOiJpS0RIOUhlYS8rNzVaWWJ0KzROODNITm5qSmRtWHFOQ0xSNTRVODlpdjNVPSJ9LCJwdWJsaWMiOnsidHlwZSI6IkJ1ZmZlciIsImRhdGEiOiJZYnpycU5qLzlUT2ZteDREdmJLWWtqb0xjZjVDdmhDODJpUVkzRmVTaFNnPSJ9fSwic2lnbmVkSWRlbnRpdHlLZXkiOnsicHJpdmF0ZSI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6IjhPU1I5bzlCT3N2M0tDU1ArL3lVZ0g4aDd5TndyNkJORjFMREpmZ1NSa2M9In0sInB1YmxpYyI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6Ik9RN0R1UUF6djJObDhHNll1aWhQK3dlTmhKZG5tbW5NZkVUajBJcVhOekE9In19LCJzaWduZWRQcmVLZXkiOnsia2V5UGFpciI6eyJwcml2YXRlIjp7InR5cGUiOiJCdWZmZXIiLCJkYXRhIjoia0pwTjloUUREQ1pxcXJqd1hzbmNUeEdtbXp1UGYxdzFzbjVBY2w1RC9tVT0ifSwicHVibGljIjp7InR5cGUiOiJCdWZmZXIiLCJkYXRhIjoiNmw3cUU2bkppS2dLMzYyRFZTL000OE81NTJoUWk4aWI3ZnRMendxR0VoND0ifX0sInNpZ25hdHVyZSI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6IllQWVZUOGdXRUpVd0NXMFhjODJmc0Z0eWhWWXRRSlpnWkFuaGJiQUlCL3pJYS9UVm84WHFjN2E0ZExrZ2swVUJVVWJqSHlhUzBva2txUTR6d3diY2dRPT0ifSwia2V5SWQiOjF9LCJyZWdpc3RyYXRpb25JZCI6MTI5LCJhZHZTZWNyZXRLZXkiOiJsMDR4OHdwT3FYbzZ3cXRNb2pNUmc1YlVIdU5PQUtjbDRCN0NpT0FQRm1NPSIsInByb2Nlc3NlZEhpc3RvcnlNZXNzYWdlcyI6W10sIm5leHRQcmVLZXlJZCI6MzEsImZpcnN0VW51cGxvYWRlZFByZUtleUlkIjozMSwiYWNjb3VudFN5bmNDb3VudGVyIjowLCJhY2NvdW50U2V0dGluZ3MiOnsidW5hcmNoaXZlQ2hhdHMiOmZhbHNlfSwicmVnaXN0ZXJlZCI6dHJ1ZSwicGFpcmluZ0NvZGUiOiI0RFBNNlQ5WiIsIm1lIjp7ImlkIjoiMjc2ODc2NTExMzY6OUBzLndoYXRzYXBwLm5ldCIsImxpZCI6IjI2OTYzODMxNTI4MjY1Njo5QGxpZCJ9LCJhY2NvdW50Ijp7ImRldGFpbHMiOiJDTnJ4bGJNQkVLQ3o3OFlHR0FFZ0FDZ0EiLCJhY2NvdW50U2lnbmF0dXJlS2V5IjoiSDNRYXpIUmwwRDdiL2xLUFV2OG5KampacGVVYU9SN3Ira1d2Z0wvSWRIRT0iLCJhY2NvdW50U2lnbmF0dXJlIjoiOGJza2JxdGFXKzhSRzJZN2x4cmhtVXV5STRTMjZEY3FiV3pEdlVrZDlMTHlMa0I5T0ZadzZQZUg2QTlXenMvTXRoTW1SbHRoK0dyQkJDWFZSQTBIREE9PSIsImRldmljZVNpZ25hdHVyZSI6ImVNSElneXQyT3d3TloxeDFwZndoWFBqV20vMnRKMEQ0L1JXK25vWEhteUNjZFZ3aWkxTHFZUytaTTVqR1pVV2JtVkd0TmJuVWU3aHRNYXNTRVU4WmdRPT0ifSwic2lnbmFsSWRlbnRpdGllcyI6W3siaWRlbnRpZmllciI6eyJuYW1lIjoiMjc2ODc2NTExMzY6OUBzLndoYXRzYXBwLm5ldCIsImRldmljZUlkIjowfSwiaWRlbnRpZmllcktleSI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6IkJSOTBHc3gwWmRBKzIvNVNqMUwvSnlZNDJhWGxHamtlNi9wRnI0Qy95SFJ4In19XSwicGxhdGZvcm0iOiJhbmRyb2lkIiwicm91dGluZ0luZm8iOnsidHlwZSI6IkJ1ZmZlciIsImRhdGEiOiJDQWdJQWc9PSJ9LCJsYXN0QWNjb3VudFN5bmNUaW1lc3RhbXAiOjE3NTkyMzg1NzMsImxhc3RQcm9wSGFzaCI6IjFLNGhINCJ9zRT0ifSwicHVibGljIjp7InR5cGUiOiJCdWZmZXIiLCJkYXRhIjoic015QUFsM2RkQ0V4ZjFxUFIzaXJBa2RjK0hmS3pzQXpqUTJTK2diODdEOD0ifX0sInBhaXJpbmdFcGhlbWVyYWxLZXlQYWlyIjp7InByaXZhdGUiOnsidHlwZSI6IkJ1ZmZlciIsImRhdGEiOiIwT2FFRFlVaml5SGVnK2JzY0ppMElvQmlNZnBwVHJMeGVNZXBydXN2alVVPSJ9LCJwdWJsaWMiOnsidHlwZSI6IkJ1ZmZlciIsImRhdGEiOiIrM2Joa2R0NXhLTjhqOUhXckFxbjR0cW5ZZE1wVkJ3M2JuOGIwRHcxT1JzPSJ9fSwic2lnbmVkSWRlbnRpdHlLZXkiOnsicHJpdmF0ZSI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6IndNVUhOY1ZWOXFzNmZ6S1htRUFaMkM0RkY1S2xNM0NuaC9vSHo4REc2bFU9In0sInB1YmxpYyI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6ImVxcCt5ZXd3V1BPMk5jdkZvVjRJTXUzZnFDTlNKZC9ydDlhWDJkcmlHeEE9In19LCJzaWduZWRQcmVLZXkiOnsia2V5UGFpciI6eyJwcml2YXRlIjp7InR5cGUiOiJCdWZmZXIiLCJkYXRhIjoic0VkbTJtOFJ1MmRzcHZzd1d4VExGZ0k2cW5YYkdyNlordWh1VEZJRWRYRT0ifSwicHVibGljIjp7InR5cGUiOiJCdWZmZXIiLCJkYXRhIjoiRk4yWmlQalcwS1F4MDlkdkpnaThrV0RrSmtKdW5ISW1Cb2dhaFR1REloMD0ifX0sInNpZ25hdHVyZSI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6IlhqTy94L1J0SDc5WGxSVlZHeHpueVhvY0VWaklUUG5sb0EvNmZRSHQ4TlVsY3haTUpHRzA4Zjd0dnJUVlF3KzRkUWtFVmFJWFQwVGlSNE82ZnJEYUFBPT0ifSwia2V5SWQiOjF9LCJyZWdpc3RyYXRpb25JZCI6MTU2LCJhZHZTZWNyZXRLZXkiOiJGTzBtUHFhU3hPY2RFYkpXcE1BclM3dXgwVElwNGNPVHByTmFrTHpxRTBjPSIsInByb2Nlc3NlZEhpc3RvcnlNZXNzYWdlcyI6W3sia2V5Ijp7InJlbW90ZUppZCI6IjI3Njg3NjUxMTM2QHMud2hhdHNhcHAubmV0IiwiZnJvbU1lIjp0cnVlLCJpZCI6IkFDQjExQjAwRjEzQkMzOENGMTFGQzg2ODMyNEY2MDA3In0sIm1lc3NhZ2VUaW1lc3RhbXAiOjE3NTkwMTM5MzR9LHsia2V5Ijp7InJlbW90ZUppZCI6IjI3Njg3NjUxMTM2QHMud2hhdHNhcHAubmV0IiwiZnJvbU1lIjp0cnVlLCJpZCI6IkFDNDdGQjA2QUU3Njc4Q0Y0N0FGMzc1RUVBMTM2QjJGIn0sIm1lc3NhZ2VUaW1lc3RhbXAiOjE3NTkwMTM5MzZ9XSwibmV4dFByZUtleUlkIjozMSwiZmlyc3RVbnVwbG9hZGVkUHJlS2V5SWQiOjMxLCJhY2NvdW50U3luY0NvdW50ZXIiOjEsImFjY291bnRTZXR0aW5ncyI6eyJ1bmFyY2hpdmVDaGF0cyI6ZmFsc2V9LCJyZWdpc3RlcmVkIjp0cnVlLCJwYWlyaW5nQ29kZSI6IjNHM1YxWFpIIiwibWUiOnsiaWQiOiIyNzY4NzY1MTEzNjoyQHMud2hhdHNhcHAubmV0IiwibGlkIjoiMjY5NjM4MzE1MjgyNjU2OjJAbGlkIiwibmFtZSI6Ik0yMyJ9LCJhY2NvdW50Ijp7ImRldGFpbHMiOiJDTlR4bGJNQkVKM1k0Y1lHR0FJZ0FDZ0EiLCJhY2NvdW50U2lnbmF0dXJlS2V5IjoiSDNRYXpIUmwwRDdiL2xLUFV2OG5KampacGVVYU9SN3Ira1d2Z0wvSWRIRT0iLCJhY2NvdW50U2lnbmF0dXJlIjoiYUtidHpVMitaQVVVVi9NLytZZDRJMCs0SERSdFNMVERFMDJLUkVsMzhQVnQ5SWpNeHVWQ0VPT0xucFBQUGZsazBOMkhDTFlxRmNBZ1BGU3lIOFhOQ1E9PSIsImRldmljZVNpZ25hdHVyZSI6IlZ0eWx2djBxN3JjYlZOckFDVUx2ellhcmhNZU92dWJqWnNWVlV5Ly9LVWFDYTRsRGFPMlZpSTd3eEM4Qm80NGM4NWpjanBKTnRiZGZKdkxibVpobkJBPT0ifSwic2lnbmFsSWRlbnRpdGllcyI6W3siaWRlbnRpZmllciI6eyJuYW1lIjoiMjc2ODc2NTExMzY6MkBzLndoYXRzYXBwLm5ldCIsImRldmljZUlkIjowfSwiaWRlbnRpZmllcktleSI6eyJ0eXBlIjoiQnVmZmVyIiwiZGF0YSI6IkJSOTBHc3gwWmRBKzIvNVNqMUwvSnlZNDJhWGxHamtlNi9wRnI0Qy95SFJ4In19XSwicGxhdGZvcm0iOiJhbmRyb2lkIiwicm91dGluZ0luZm8iOnsidHlwZSI6IkJ1ZmZlciIsImRhdGEiOiJDQWdJQWc9PSJ9LCJsYXN0QWNjb3VudFN5bmNUaW1lc3RhbXAiOjE3NTkwMTM5MzIsImxhc3RQcm9wSGFzaCI6IjFLNGhINCIsIm15QXBwU3RhdGVLZXlJZCI6IkFBQUFBSjBhIn0=", // enter session id
  ownername: config.ownername || "ᴋᴇʟᴠɪɴ ᴛᴇᴄʜ", // Owner name
  botname: config.botname || "ᴠɪɴɪᴄ xᴍᴅ", // custom bot name
  prefa: config.prefa || ['.', '!'], // Command prefixes
  owner: config.owner || ["256742932677"] // Owner phone numbers
};

// Export settings for use in other modules
module.exports = settings;

// Watch for changes to this file and reload if updated
const fs = require('fs');
let file = require.resolve(__filename);
fs.watchFile(file, () => {
  fs.unwatchFile(file);
  console.log('\x1b[0;32m' + __filename + ' \x1b[1;32mupdated!\x1b[0m');
  delete require.cache[file];
  require(file);
});
